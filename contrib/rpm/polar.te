policy_module(polar, 1.100.1)

########################################
#
# Declarations
#

type polar_t;
type polar_exec_t;
init_daemon_domain(polar_t, polar_exec_t)

permissive polar_t;

type polar_initrc_exec_t;
init_script_file(polar_initrc_exec_t)

type polar_conf_t;
files_type(polar_conf_t)

type polar_var_lib_t;
files_type(polar_var_lib_t)

type polar_var_run_t;
files_type(polar_var_run_t)

type polar_port_t;
corenet_port(polar_port_t)

########################################
#
# polar local policy
#
allow polar_t self:process { fork };

allow polar_t self:fifo_file rw_fifo_file_perms;
allow polar_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(polar_t, polar_conf_t, polar_conf_t)
manage_files_pattern(polar_t, polar_conf_t, polar_conf_t)

manage_dirs_pattern(polar_t, polar_var_lib_t, polar_var_lib_t)
manage_files_pattern(polar_t, polar_var_lib_t, polar_var_lib_t)
files_var_lib_filetrans(polar_t, polar_var_lib_t, { dir file })

manage_dirs_pattern(polar_t, polar_var_run_t, polar_var_run_t)
manage_files_pattern(polar_t, polar_var_run_t, polar_var_run_t)

sysnet_dns_name_resolve(polar_t)
corenet_all_recvfrom_unlabeled(polar_t)

allow polar_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(polar_t)
corenet_tcp_sendrecv_generic_node(polar_t)
corenet_tcp_sendrecv_all_ports(polar_t)
corenet_tcp_bind_generic_node(polar_t)

gen_require(`
    type polar_port_t;
')
allow polar_t polar_port_t:tcp_socket name_bind;

gen_require(`
    type polar_port_t;
')
allow polar_t polar_port_t:tcp_socket name_connect;

domain_use_interactive_fds(polar_t)

files_read_etc_files(polar_t)

miscfiles_read_localization(polar_t)

sysnet_dns_name_resolve(polar_t)

allow polar_t polar_exec_t:file execute_no_trans;
allow polar_t self:process setsched;
corecmd_exec_ls(polar_t)
corenet_tcp_connect_http_port(polar_t)
dev_read_urand(polar_t)
fs_getattr_xattr_fs(polar_t)
kernel_read_system_state(polar_t)
